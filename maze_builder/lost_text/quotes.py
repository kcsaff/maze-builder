from maze_builder.sewer import MadLibs, Choice
from maze_builder.lost_text.text_decorations import fix_sentence, pluralize, pluralize_verb

quote_sentence = MadLibs(
    '{FULL_QUOTE FIXED}',
    FIXED=fix_sentence,
    PLURALIZED=pluralize,
    PLURALIZED_VERB=pluralize_verb,
    FULL_QUOTE={
        '"{QUOTE}."': 100,
        '{QUOTE}.': 40,
        '"{QUOTE}," according to the {SCRIPTURES}.': 20,
        'Some say, "{QUOTE}."': 20,
        'I\'ve learned the truth of "{QUOTE}."': 10,
        '{MY_TEACHER} once said, "{QUOTE}."': 10,
        'Remember, "{QUOTE}!"': 20,
    },
    SCRIPTURES={
        'scriptures': 100,
        'prophesy': 50,
    },
    QUOTE={
        '{TOLKIEN}': 20,
        'if you don\'t get {LOST}, {THEN} you may never be {FOUND}': 7,
        '{WALKER}': 10,
        '{ARNOLD}': 10,
        'in order to {FINDS PLURALIZED_VERB} youself, you need to get {LOST}': 3,
        'if you meet {THE_TEACHER} on the {ROAD}, {KILL} {HIM}': 5,
    },
    ROAD={
        'road': 100,
        'way': 50,
    },
    KILL={
        'kill': 100,
        'murder': 10,
        'terminate': 10,
        'destroy': 10,
        'dispatch': 1,
        'execute': 1,
    },
    HIM={
        'him': 100,
        'her': 100,
        'hir': 20,
        'them': 20,
    },
    THEN={
        'there\'s a chance': 20,
        'then': 20,
        'it\'s possible': 10,
        'perhaps': 10,
    },
    TOLKIEN={
        'not all who {WANDER} are {LOST}': 100,
    },
    WALKER={
        '{IN_SEARCH_OF} {MY_MOTHERS} {GARDEN}, I {DISCOVERED} my own': 100,
    },
    ARNOLD={
        'he who {FINDS} himself, {LOSES} his {MISERY}': 100,
        'she who {FINDS} herself, {LOSES} her {MISERY}': 100,
        'you who {FINDS PLURALIZED_VERB} yourself, {LOSES PLURALIZED_VERB} your {MISERY}': 50,
        'ze who {FINDS} hirself, {LOSES} hir {MISERY}': 50,
        'thou who {FINDS PLURALIZED_VERB} thyself, {LOSES PLURALIZED_VERB} thy {MISERY}': 20,
        'they who {FINDS PLURALIZED_VERB} theirself, {LOSES PLURALIZED_VERB} their {MISERY}': 50,
        'ze who {FINDS} zirself, {LOSES} zir {MISERY}': 10,
        'bun who {FINDS} bunself, {LOSES} buns {MISERY}': 10,
        'thon who {FINDS} thonself, {LOSES} thons {MISERY}': 10,
    },
    WANDER={
        'wander': 100,
        'amble': 50,
        'cruise': 5,
        'drift': 50,
        'float': 5,
        'hike': 25,
        'meander': 50,
        'ramble': 50,
        'roam': 50,
        'saunter': 25,
        'straggle': 50,
        'stray': 50,
        'stroll': 25,
        'traipse': 25,
        'trek': 25,
        'aberatte': 5,
        'circumambulate': 50,
        'diverge': 50,
        'gallivant': 50,
        'jaunt': 25,
        'range': 15,
        'rove': 50,
        'tramp': 25,
        'circumlocute': 25,
        'circumnutate': 50,
        'peregrinate': 10,
        'journey': 25,
        'travel': 20,
        'voyage': 20,
        'wend': 10,
        'hit the road': 10,
    },
    LOST={
        'lost': 100,
        'absent': 10,
        'adrift': 50,
        'disoriented': 50,
        'misplaced': 50,
        'vanished': 5,
        'mislaid': 25,
        'astray': 50,
        'wandering': 25,
        'irrecoverable': 50,
        'irretrievable': 50,
        'nowhere to be found': 10,
        'wayward': 50,
        'irredeemable': 50,
        'off-course': 25,
        'straying': 10,
        'AWOL': 10,
        'playing hooky': 5,
        'missing': 10,
        'erring': 50,
        'wrong': 20,
    },
    FOUND={
        'found': 100,
        'present': 10,
        'anchored': 10,
        'on course': 20,
        'on target': 10,
        'right': 10,
        'redeemed': 50,
        'recovered': 25,
        'retrieved': 25,
        'oriented': 10,
    },
    IN_SEARCH_OF={
        'in search of': 100,
        'pursuing': 50,
        'seeking': 50,
        'searching for': 50,
        'looking for': 50,
        'in pursuit of': 50,
        'pursuing': 50,
        'hunting': 20,
        'questing for': 20,
        'on the hunt for': 20,
        'in exploration for': 10,
    },
    MY_TEACHER={
        'my {MOTHER}': 50,
        'my {TEACHER}': 100,
        '{THE_TEACHER}': 50,
    },
    MY_MOTHERS={
        'my {MOTHER}\'s': 100,
        'my {TEACHER}\'s': 50,
        '{THE_TEACHER}\'s': 50,
    },
    THE_TEACHER={
        'the {TEACHER}': 50,
        'the Buddha': 15,
        'the Christ': 5,
    },
    MOTHER={
        'mother': 30,
        'father': 30,
        'parent': 10,
        'grandmother': 20,
        'grandfather': 20,
        'grandparent': 5,
        'ancestor': 10,
    },
    TEACHER={
        'teacher': 10,
        'preacher': 10,
        'professor': 10,
        'pastor': 10,
        'yogi': 10,
        'reverend': 10,
        'parson': 10,
    },
    GARDEN={
        'garden': 100,
        'courtyard': 50,
        'happy place': 10,
        'park': 10,
        'lawn': 5,
        'farm': 50,
        'dream home': 50,
        'memory palace': 10,
        'tao': 5,
        'way': 5,
        'path': 5,
    },
    DISCOVERED={
        'discovered': 100,
        'found': 50,
        'located': 50,
        'uncovered': 20,
        'unearthed': 20,
        'learned': 50,
        'realized': 35,
        'recognized': 35,
        'fathomed': 5,
        'saw': 1,
        'ascertained': 5,
        'found out': 10,
        'hit on': 10,
        'came up with': 35,
        'invented': 35,
        'originated': 35,
        'planted': 20,
        'devised': 20,
        'designed': 20,
        'contrived': 20,
    },
    FINDS={
        'finds': 100,
        'discovers': 50,
        'obtains': 20,
        'locates': 10,
        'unearths': 10,
        'acquires': 10,
        'gains': 10,
        'retrieves': 10,
        'recovers': 10,
        'regains': 10,
        'recovers': 10,
        'works out': 10,
        'invents': 10,
        'figures out': 10,
        'recognizes': 10,
    },
    LOSES={
        'loses': 100,
        'buries': 10,
        'misplaces': 50,
        'departs from': 20,
        'leaves': 50,
        'mislays': 50,
    },
    MISERY={
        'misery': 100,
        'suffering': 50,
        'unhappiness': 50,
        'distress': 50,
        'anguish': 50,
        'anxiety': 50,
        'angst': 50,
        'torment': 50,
        'pain': 50,
        'despair': 50,
        'depression': 50,
        'melancholy': 50,
        'woe': 50,
    }
)


if __name__ == '__main__':
    for _ in range(20):
        print(quote_sentence())
